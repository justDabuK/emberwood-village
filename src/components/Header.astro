---
import { Icon } from 'astro-icon/components';

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);

const navList = [
    {
        name: "Emberwood",
        path: "",
        pathStartsWith: ["shops", "establishments", "misc"],
        icon: "store"
    },
    {
        name: "Spells",
        path: "spells/levels",
        pathStartsWith: ["spells"],
        icon: "creation"
    },
    {
        name: "Downtime",
        path: "downtime",
        icon: "glass-mug"

    },
    {
        name: "Bestiary",
        path: "bestiary",
        icon: "paw"
    },
    {
        name: "Timeline",
        path: "timeline",
        icon: "timeline-clock"
    },
    {
        name: "Characters",
        path: "characters",
        icon: "account-cowboy-hat"
    }
]

const isSubPath = (pathStartsWith: string[], currentPath: string) => pathStartsWith.some(path => currentPath.startsWith(path));
---

<nav>
    <h1 class="delerium-text-color"><a href="/">Drakkenheim Beyond</a></h1>
    <ul class="nav-list">
        {
            navList.map(({ name, path, pathStartsWith, icon }) =>
                <li class={isSubPath(pathStartsWith ?? [path], currentPath) || currentPath === path ? "active" : ""}>
                    <a style={`view-transition-name: nav-link-${name}`} href={`/${path}`}>
                        {
                            icon ? <Icon name={icon} /> : null
                        }
                        <span>{name}</span>
                    </a>
                </li>
            )
        }
    </ul>
</nav>

<style>
    nav {
        background-color: var(--nav-bg);
        height: 100%;
        position: sticky;
        top: 0;
        max-height: 100svh;
        padding-left: 2rem;
        padding-block: 2rem;
    }

    h1 {
        font-size: 1.5rem;
        font-weight: normal;
    }

    [data-icon] {
        height: 1.5rem;
        width: 1.5rem;
        color: var(--text-color-darker-1);
    }

    .nav-list {
        list-style: none;
        padding: 0;
        margin: 0;

        display: grid;
        gap: 2rem;
        padding-block: 2rem;

    }

    .nav-list li {
        padding: 1rem 2rem;
        border-radius: 100vw 0 0 100vw;
        line-height: 1;
    }

    .nav-list li.active {
        view-transition-name: activeNavTab;
        background: var(--body-bg);
        position: relative;
    }

    .nav-list li.active::before,
    .nav-list li.active::after {
        --border-radius: 2rem;


        content: '';
        position: absolute;
        width: var(--border-radius);
        height: var(--border-radius);
        right: 0;
        background: var(--nav-bg);
    }

    .nav-list li.active::before {
        top: calc(var(--border-radius) * -1);
        border-radius: 0 0 100vw 0;
        box-shadow: 10px 10px 0 10px var(--body-bg);
    }

    .nav-list li.active::after {
        bottom: calc(var(--border-radius) * -1);
        border-radius: 0 100vw 0 0;
        box-shadow: 10px -10px 0 10px var(--body-bg);
    }


    .nav-list a {
        color: var(--text-color);
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 1rem;
        position: relative;
        z-index: 1;
    }

    .nav-list a span {
        background-image: linear-gradient(90deg, rebeccapurple, teal);
        background-size: 0 3px;
        background-repeat: no-repeat;
        background-position: left 1.2em;
        padding-block: .15em;

        transition: background-size 500ms;
    }

    .nav-list a:hover span,
    .nav-list a:focus span {
        background-size: 100% 3px;
    }

    .delerium-text-color a {
        color: transparent;
        background-clip: text;
        background-image: linear-gradient(90deg, rebeccapurple, teal);
        transition: text-shadow 2s ease-in-out;

        &:hover {
            animation: glow 5s ease-in-out infinite alternate;
        }
    }

    @keyframes glow {
        0% {
            text-shadow: 0 0 5px rebeccapurple;
        }
        25% {
            text-shadow: 0 0 10px rebeccapurple;
        }
        50% {
            text-shadow: 0 0 10px teal;
        }
        75% {
            text-shadow: 0 0 5px teal;
        }
    }
</style>