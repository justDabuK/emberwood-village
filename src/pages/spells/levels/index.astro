---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import SpellListItem from "../../../components/SpellListItem.astro";
import { type CollectionEntry, getCollection } from "astro:content";

const allSpells = await getCollection("spells");

const levelToSpellMap = new Map<number, CollectionEntry<"spells">[]>();

allSpells.forEach((spell) => {
  const level = spell.data.level;
  if (levelToSpellMap.has(level)) {
    levelToSpellMap.get(level)?.push(spell);
  } else {
    levelToSpellMap.set(level, [spell]);
  }
});
const sortedLevelToSpellMap = new Map([...levelToSpellMap.entries()].sort());
---

<BaseLayout title="Spells">
  <a href="/spells">
    <div>Sort alphabetically</div>
  </a>
  <!-- TODO: add the normal spells from sebastion crowe's guide to Drakkenheim as well
        - [X] cantrips
        - [X] 1
        - [X] 2
        - [ ] 3
        - [ ] 4
        - [ ] 5
        - [ ] 6
        - [ ] 7
        - [ ] 8
        - [ ] 9
        -->
  <div class="level-list-container">
    {
      Array.from(sortedLevelToSpellMap.entries()).map(([level, spells]) => (
        <div class="card">
          <h3>{level === 0 ? "Cantrips" : `Level ${level}`}</h3>
          <ul>
            {spells.map((spell) => (
              <SpellListItem spell={spell} />
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</BaseLayout>

<style>
  .level-list-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--size-256), 1fr));
    padding: 1rem 0;
  }

  .card {
    margin: 0.5rem;
  }
</style>
