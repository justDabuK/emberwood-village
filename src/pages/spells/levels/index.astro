---
import {MarkdownInstance} from "astro";
import MarkdownLink from "../../../components/MarkdownLink.astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";

const allSpells = await Astro.glob("/src/pages/spells/*.md");
const levelToSpellMap = new Map<number,  MarkdownInstance<Record<string, any>>[]>();
    allSpells.forEach((spell) => {
        const level = spell.frontmatter.level;
        if (levelToSpellMap.has(level)) {
            levelToSpellMap.get(level).push(spell);
        } else {
            levelToSpellMap.set(level, [spell]);
        }
    });
const sortedLevelToSpellMap = new Map([...levelToSpellMap.entries()].sort());

const levels = [...new Set(allSpells.map((spell) => spell.frontmatter.level).sort())]
---
<BaseLayout title="Spells">
    <a href="/spells">
        <div>
            Sort alphabetically
        </div>
    </a>
    <!-- TODO: add the normal spells from sebastion crowe's guide to Drakkenheim as well
        - [X] cantrips
        - [X] 1
        - [X] 2
        - [ ] 3
        - [ ] 4
        - [ ] 5
        - [ ] 6
        - [ ] 7
        - [ ] 8
        - [ ] 9
        -->
    {Array.from(sortedLevelToSpellMap.entries()).map(([level, spells]) => (
            <h3>{ level === 0 ? "Cantrips" : `Level ${level}`}</h3>
            <ul>
                {spells.map((spell) => <MarkdownLink url={spell.url} title={spell.frontmatter.title} disabled={spell.frontmatter.disabled} />)}
            </ul>
    ))}
</BaseLayout>